// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`Snapshot test 1`] = `
{
  "Outputs": {
    "AuroraBastionHostBastionHostId41E0EBC0": {
      "Description": "Instance ID of the bastion host. Use this to connect via SSM Session Manager",
      "Value": {
        "Ref": "AuroraBastionHostC24C6193",
      },
    },
  },
  "Parameters": {
    "BootstrapVersion": {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueawsserviceamiamazonlinuxlatestal2023amikernel61arm64C96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/aws/service/ami-amazon-linux-latest/al2023-ami-kernel-6.1-arm64",
      "Type": "AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>",
    },
    "SsmParameterValueawsserviceamiamazonlinuxlatestamzn2amikernel510hvmx8664gp2C96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/aws/service/ami-amazon-linux-latest/amzn2-ami-kernel-5.10-hvm-x86_64-gp2",
      "Type": "AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>",
    },
  },
  "Resources": {
    "AlertTopic2720D535": {
      "Type": "AWS::SNS::Topic",
    },
    "AlertTopichttpsoncallproduscentral0grafananetoncallintegrationsv1amazonsnsVYAueEPpd2c0e6vZG3QJKgTID0928EFCB": {
      "Properties": {
        "Endpoint": "https://oncall-prod-us-central-0.grafana.net/oncall/integrations/v1/amazon_sns/VYAueEPpd2c0e6vZG3QJKgTID/",
        "Protocol": "https",
        "TopicArn": {
          "Ref": "AlertTopic2720D535",
        },
      },
      "Type": "AWS::SNS::Subscription",
    },
    "Aurora3FE0D001": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "CopyTagsToSnapshot": true,
        "DBClusterParameterGroupName": {
          "Ref": "AuroraAuroraauroraparametersgroupAC543997",
        },
        "DBSubnetGroupName": {
          "Ref": "AuroraSubnets580C9E00",
        },
        "DatabaseName": "mydb",
        "Engine": "aurora-mysql",
        "EngineVersion": "8.0.mysql_aurora.3.06.0",
        "MasterUserPassword": {
          "Fn::Join": [
            "",
            [
              "{{resolve:secretsmanager:",
              {
                "Ref": "TargetAuroraSecret2DEF1BBF3fdaad7efa858a3daf9490cf0a702aeb",
              },
              ":SecretString:password::}}",
            ],
          ],
        },
        "MasterUsername": "admin",
        "PreferredMaintenanceWindow": "Sat:17:00-Sat:17:30",
        "VpcSecurityGroupIds": [
          {
            "Fn::GetAtt": [
              "AuroraSecurityGroup467E7067",
              "GroupId",
            ],
          },
        ],
      },
      "Type": "AWS::RDS::DBCluster",
      "UpdateReplacePolicy": "Delete",
    },
    "AuroraAuroraauroraparametersgroupAC543997": {
      "Properties": {
        "Description": "Cluster parameter group for aurora-mysql8.0",
        "Family": "aurora-mysql8.0",
        "Parameters": {
          "character_set_client": "utf8mb4",
          "character_set_server": "utf8mb4",
          "server_audit_events": "CONNECT,QUERY,TABLE",
          "server_audit_logging": "1",
        },
      },
      "Type": "AWS::RDS::DBClusterParameterGroup",
    },
    "AuroraBastionHostC24C6193": {
      "DependsOn": [
        "AuroraBastionHostInstanceRoleDefaultPolicy0B0D2B8A",
        "AuroraBastionHostInstanceRoleEDA435D4",
      ],
      "Properties": {
        "AvailabilityZone": {
          "Fn::Select": [
            0,
            {
              "Fn::GetAZs": "",
            },
          ],
        },
        "IamInstanceProfile": {
          "Ref": "AuroraBastionHostInstanceProfileD80005D6",
        },
        "ImageId": {
          "Ref": "SsmParameterValueawsserviceamiamazonlinuxlatestamzn2amikernel510hvmx8664gp2C96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "InstanceType": "t3.nano",
        "SecurityGroupIds": [
          {
            "Fn::GetAtt": [
              "AuroraBastionHostInstanceSecurityGroup3B0F6505",
              "GroupId",
            ],
          },
        ],
        "SubnetId": {
          "Ref": "VpcPrivateSubnet1Subnet67A4DBCB",
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "BastionHost",
          },
        ],
        "UserData": {
          "Fn::Base64": "#!/bin/bash",
        },
      },
      "Type": "AWS::EC2::Instance",
    },
    "AuroraBastionHostInstanceProfileD80005D6": {
      "Properties": {
        "Roles": [
          {
            "Ref": "AuroraBastionHostInstanceRoleEDA435D4",
          },
        ],
      },
      "Type": "AWS::IAM::InstanceProfile",
    },
    "AuroraBastionHostInstanceRoleDefaultPolicy0B0D2B8A": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "ssmmessages:*",
                "ssm:UpdateInstanceInformation",
                "ec2messages:*",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "AuroraBastionHostInstanceRoleDefaultPolicy0B0D2B8A",
        "Roles": [
          {
            "Ref": "AuroraBastionHostInstanceRoleEDA435D4",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "AuroraBastionHostInstanceRoleEDA435D4": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ec2.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "BastionHost",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "AuroraBastionHostInstanceSecurityGroup3B0F6505": {
      "Properties": {
        "GroupDescription": "Target/Aurora/BastionHost/Resource/InstanceSecurityGroup",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": "BastionHost",
          },
        ],
        "VpcId": {
          "Ref": "VpcC3027511",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "AuroraGrafanaDBSecretBB1C63CF": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "GenerateSecretString": {
          "ExcludePunctuation": true,
          "GenerateStringKey": "password",
          "SecretStringTemplate": {
            "Fn::Join": [
              "",
              [
                "{"host":"",
                {
                  "Fn::GetAtt": [
                    "Aurora3FE0D001",
                    "Endpoint.Address",
                  ],
                },
                "","dbname":"grafana","username":"grafana-admin"}",
              ],
            ],
          },
        },
      },
      "Type": "AWS::SecretsManager::Secret",
      "UpdateReplacePolicy": "Delete",
    },
    "AuroraOncallDBSecret6B152582": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "GenerateSecretString": {
          "ExcludePunctuation": true,
          "GenerateStringKey": "password",
          "SecretStringTemplate": {
            "Fn::Join": [
              "",
              [
                "{"host":"",
                {
                  "Fn::GetAtt": [
                    "Aurora3FE0D001",
                    "Endpoint.Address",
                  ],
                },
                "","dbname":"oncall","username":"oncall-admin"}",
              ],
            ],
          },
        },
      },
      "Type": "AWS::SecretsManager::Secret",
      "UpdateReplacePolicy": "Delete",
    },
    "AuroraSecretAttachment3E825A9F": {
      "Properties": {
        "SecretId": {
          "Ref": "TargetAuroraSecret2DEF1BBF3fdaad7efa858a3daf9490cf0a702aeb",
        },
        "TargetId": {
          "Ref": "Aurora3FE0D001",
        },
        "TargetType": "AWS::RDS::DBCluster",
      },
      "Type": "AWS::SecretsManager::SecretTargetAttachment",
    },
    "AuroraSecurityGroup467E7067": {
      "Properties": {
        "GroupDescription": "RDS security group",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "VpcId": {
          "Ref": "VpcC3027511",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "AuroraSecurityGroupfromTargetAuroraBastionHostInstanceSecurityGroupC43FC1283306185532B5": {
      "Properties": {
        "Description": "from TargetAuroraBastionHostInstanceSecurityGroupC43FC128:3306",
        "FromPort": 3306,
        "GroupId": {
          "Fn::GetAtt": [
            "AuroraSecurityGroup467E7067",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "AuroraBastionHostInstanceSecurityGroup3B0F6505",
            "GroupId",
          ],
        },
        "ToPort": 3306,
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "AuroraSecurityGroupfromTargetGrafanaPdcAgentFargateServiceSecurityGroup44C6C3C0330621DE5F8E": {
      "Properties": {
        "Description": "from TargetGrafanaPdcAgentFargateServiceSecurityGroup44C6C3C0:3306",
        "FromPort": 3306,
        "GroupId": {
          "Fn::GetAtt": [
            "AuroraSecurityGroup467E7067",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "GrafanaPdcAgentFargateServiceSecurityGroupAA311E92",
            "GroupId",
          ],
        },
        "ToPort": 3306,
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "AuroraSecurityGroupfromTargetGrafanaServiceFargateServiceSecurityGroupCF5CFB493306D7CF666F": {
      "Properties": {
        "Description": "from TargetGrafanaServiceFargateServiceSecurityGroupCF5CFB49:3306",
        "FromPort": 3306,
        "GroupId": {
          "Fn::GetAtt": [
            "AuroraSecurityGroup467E7067",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "GrafanaServiceFargateServiceSecurityGroupB6FC9E23",
            "GroupId",
          ],
        },
        "ToPort": 3306,
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "AuroraSecurityGroupfromTargetIotDataIngesterFargateServiceSecurityGroup5719E9B33306A98EA2C8": {
      "Properties": {
        "Description": "from TargetIotDataIngesterFargateServiceSecurityGroup5719E9B3:3306",
        "FromPort": 3306,
        "GroupId": {
          "Fn::GetAtt": [
            "AuroraSecurityGroup467E7067",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "IotDataIngesterFargateServiceSecurityGroup0B611246",
            "GroupId",
          ],
        },
        "ToPort": 3306,
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "AuroraSecurityGroupfromTargetOncallServiceFargateServiceSecurityGroup62CBBD553306FAE341F4": {
      "Properties": {
        "Description": "from TargetOncallServiceFargateServiceSecurityGroup62CBBD55:3306",
        "FromPort": 3306,
        "GroupId": {
          "Fn::GetAtt": [
            "AuroraSecurityGroup467E7067",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "OncallServiceFargateServiceSecurityGroup28BCC824",
            "GroupId",
          ],
        },
        "ToPort": 3306,
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "AuroraSubnets580C9E00": {
      "Properties": {
        "DBSubnetGroupDescription": "Subnets for Aurora database",
        "SubnetIds": [
          {
            "Ref": "VpcIsolatedSubnet1SubnetDC3C6AF8",
          },
          {
            "Ref": "VpcIsolatedSubnet2SubnetB479B99C",
          },
        ],
      },
      "Type": "AWS::RDS::DBSubnetGroup",
    },
    "Aurorawriter398FC05B": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "VpcIsolatedSubnet1RouteTableAssociation0FC379C3",
        "VpcIsolatedSubnet2RouteTableAssociation8E8989F5",
      ],
      "Properties": {
        "DBClusterIdentifier": {
          "Ref": "Aurora3FE0D001",
        },
        "DBInstanceClass": "db.t3.medium",
        "Engine": "aurora-mysql",
        "PromotionTier": 0,
        "PubliclyAccessible": false,
      },
      "Type": "AWS::RDS::DBInstance",
      "UpdateReplacePolicy": "Delete",
    },
    "FargateCluster76631EA2": {
      "Properties": {
        "ClusterSettings": [
          {
            "Name": "containerInsights",
            "Value": "enabled",
          },
        ],
      },
      "Type": "AWS::ECS::Cluster",
    },
    "GrafanaPdcAgentFargateService0798C719": {
      "DependsOn": [
        "GrafanaPdcAgentTaskDefinitionTaskRoleBEE79DE5",
      ],
      "Properties": {
        "Cluster": {
          "Ref": "FargateCluster76631EA2",
        },
        "DeploymentConfiguration": {
          "Alarms": {
            "AlarmNames": [],
            "Enable": false,
            "Rollback": false,
          },
          "DeploymentCircuitBreaker": {
            "Enable": true,
            "Rollback": false,
          },
          "MaximumPercent": 200,
          "MinimumHealthyPercent": 50,
        },
        "DeploymentController": {
          "Type": "ECS",
        },
        "DesiredCount": 1,
        "EnableECSManagedTags": false,
        "LaunchType": "FARGATE",
        "NetworkConfiguration": {
          "AwsvpcConfiguration": {
            "AssignPublicIp": "DISABLED",
            "SecurityGroups": [
              {
                "Fn::GetAtt": [
                  "GrafanaPdcAgentFargateServiceSecurityGroupAA311E92",
                  "GroupId",
                ],
              },
            ],
            "Subnets": [
              {
                "Ref": "VpcPrivateSubnet1Subnet67A4DBCB",
              },
              {
                "Ref": "VpcPrivateSubnet2SubnetC8EB537D",
              },
            ],
          },
        },
        "TaskDefinition": {
          "Ref": "GrafanaPdcAgentTaskDefinition3CF01727",
        },
      },
      "Type": "AWS::ECS::Service",
    },
    "GrafanaPdcAgentFargateServiceSecurityGroupAA311E92": {
      "DependsOn": [
        "GrafanaPdcAgentTaskDefinitionTaskRoleBEE79DE5",
      ],
      "Properties": {
        "GroupDescription": "Target/GrafanaPdcAgent/FargateService/SecurityGroup",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "VpcId": {
          "Ref": "VpcC3027511",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "GrafanaPdcAgentTaskDefinition3CF01727": {
      "Properties": {
        "ContainerDefinitions": [
          {
            "Command": [
              "-token",
              "{{resolve:ssm:/grafana-oncall-hosting/pdc-agent-token:2}}",
              "-cluster",
              "{{resolve:ssm:/grafana-oncall-hosting/pdc-agent-cluster:2}}",
              "-gcloud-hosted-grafana-id",
              "{{resolve:ssm:/grafana-oncall-hosting/gcloud-hosted-grafana-id:2}}",
            ],
            "Essential": true,
            "Image": "grafana/pdc-agent:0.0.32",
            "LogConfiguration": {
              "LogDriver": "awslogs",
              "Options": {
                "awslogs-group": {
                  "Ref": "GrafanaPdcAgentTaskDefinitionPdcAgentLogGroup643F8816",
                },
                "awslogs-region": {
                  "Ref": "AWS::Region",
                },
                "awslogs-stream-prefix": "PdcAgent",
              },
            },
            "Name": "PdcAgent",
            "ReadonlyRootFilesystem": false,
          },
        ],
        "Cpu": "256",
        "ExecutionRoleArn": {
          "Fn::GetAtt": [
            "GrafanaPdcAgentTaskDefinitionExecutionRoleA9A98010",
            "Arn",
          ],
        },
        "Family": "TargetGrafanaPdcAgentTaskDefinition459802BB",
        "Memory": "512",
        "NetworkMode": "awsvpc",
        "RequiresCompatibilities": [
          "FARGATE",
        ],
        "RuntimePlatform": {
          "CpuArchitecture": "ARM64",
        },
        "TaskRoleArn": {
          "Fn::GetAtt": [
            "GrafanaPdcAgentTaskDefinitionTaskRoleBEE79DE5",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ECS::TaskDefinition",
    },
    "GrafanaPdcAgentTaskDefinitionExecutionRoleA9A98010": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "GrafanaPdcAgentTaskDefinitionExecutionRoleDefaultPolicy373A1E66": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "GrafanaPdcAgentTaskDefinitionPdcAgentLogGroup643F8816",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "GrafanaPdcAgentTaskDefinitionExecutionRoleDefaultPolicy373A1E66",
        "Roles": [
          {
            "Ref": "GrafanaPdcAgentTaskDefinitionExecutionRoleA9A98010",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "GrafanaPdcAgentTaskDefinitionPdcAgentLogGroup643F8816": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "RetentionInDays": 90,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "GrafanaPdcAgentTaskDefinitionTaskRoleBEE79DE5": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "GrafanaServiceFargateService4FE727BA": {
      "DependsOn": [
        "GrafanaServiceTaskDefinitionTaskRole58D661CD",
        "MainALBListener7261B16A",
      ],
      "Properties": {
        "Cluster": {
          "Ref": "FargateCluster76631EA2",
        },
        "DeploymentConfiguration": {
          "Alarms": {
            "AlarmNames": [],
            "Enable": false,
            "Rollback": false,
          },
          "DeploymentCircuitBreaker": {
            "Enable": true,
            "Rollback": false,
          },
          "MaximumPercent": 200,
          "MinimumHealthyPercent": 50,
        },
        "DeploymentController": {
          "Type": "ECS",
        },
        "DesiredCount": 1,
        "EnableECSManagedTags": false,
        "HealthCheckGracePeriodSeconds": 60,
        "LaunchType": "FARGATE",
        "LoadBalancers": [
          {
            "ContainerName": "Grafana",
            "ContainerPort": 3000,
            "TargetGroupArn": {
              "Ref": "GrafanaServiceGrafanaTargetGroup3B517F8B",
            },
          },
        ],
        "NetworkConfiguration": {
          "AwsvpcConfiguration": {
            "AssignPublicIp": "DISABLED",
            "SecurityGroups": [
              {
                "Fn::GetAtt": [
                  "GrafanaServiceFargateServiceSecurityGroupB6FC9E23",
                  "GroupId",
                ],
              },
            ],
            "Subnets": [
              {
                "Ref": "VpcPrivateSubnet1Subnet67A4DBCB",
              },
              {
                "Ref": "VpcPrivateSubnet2SubnetC8EB537D",
              },
            ],
          },
        },
        "TaskDefinition": {
          "Ref": "GrafanaServiceTaskDefinitionAEEF5381",
        },
      },
      "Type": "AWS::ECS::Service",
    },
    "GrafanaServiceFargateServiceSecurityGroupB6FC9E23": {
      "DependsOn": [
        "GrafanaServiceTaskDefinitionTaskRole58D661CD",
      ],
      "Properties": {
        "GroupDescription": "Target/GrafanaService/FargateService/SecurityGroup",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "VpcId": {
          "Ref": "VpcC3027511",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "GrafanaServiceFargateServiceSecurityGroupfromTargetMainALBSecurityGroup756C9DCD300081FED9A5": {
      "DependsOn": [
        "GrafanaServiceTaskDefinitionTaskRole58D661CD",
      ],
      "Properties": {
        "Description": "Load balancer to target",
        "FromPort": 3000,
        "GroupId": {
          "Fn::GetAtt": [
            "GrafanaServiceFargateServiceSecurityGroupB6FC9E23",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "MainALBSecurityGroup645C0E97",
            "GroupId",
          ],
        },
        "ToPort": 3000,
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "GrafanaServiceGrafanaTargetGroup3B517F8B": {
      "Properties": {
        "HealthCheckPath": "/api/health",
        "Port": 3000,
        "Protocol": "HTTP",
        "TargetGroupAttributes": [
          {
            "Key": "stickiness.enabled",
            "Value": "false",
          },
        ],
        "TargetType": "ip",
        "VpcId": {
          "Ref": "VpcC3027511",
        },
      },
      "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
    },
    "GrafanaServiceTaskDefinitionAEEF5381": {
      "Properties": {
        "ContainerDefinitions": [
          {
            "Environment": [
              {
                "Name": "GF_SERVER_ROOT_URL",
                "Value": {
                  "Fn::Join": [
                    "",
                    [
                      "http://",
                      {
                        "Fn::GetAtt": [
                          "MainALB27024B77",
                          "DNSName",
                        ],
                      },
                      "/grafana",
                    ],
                  ],
                },
              },
              {
                "Name": "GF_SERVER_SERVE_FROM_SUB_PATH",
                "Value": "true",
              },
              {
                "Name": "GF_DATABASE_TYPE",
                "Value": "mysql",
              },
              {
                "Name": "GF_SECURITY_ADMIN_USER",
                "Value": "admin",
              },
              {
                "Name": "GF_PLUGINS_ALLOW_LOADING_UNSIGNED_PLUGINS",
                "Value": "grafana-oncall-app",
              },
              {
                "Name": "GF_INSTALL_PLUGINS",
                "Value": "grafana-oncall-app vv1.9.20",
              },
            ],
            "Essential": true,
            "Image": "grafana/grafana:11.2.0",
            "LogConfiguration": {
              "LogDriver": "awslogs",
              "Options": {
                "awslogs-group": {
                  "Ref": "GrafanaServiceTaskDefinitionGrafanaLogGroupD795AF6C",
                },
                "awslogs-region": {
                  "Ref": "AWS::Region",
                },
                "awslogs-stream-prefix": "Grafana",
              },
            },
            "Name": "Grafana",
            "PortMappings": [
              {
                "ContainerPort": 3000,
                "Protocol": "tcp",
              },
            ],
            "ReadonlyRootFilesystem": false,
            "Secrets": [
              {
                "Name": "GF_SECURITY_ADMIN_PASSWORD",
                "ValueFrom": {
                  "Ref": "GrafanaServicegrafanaAdminPassword93E3CFB8",
                },
              },
              {
                "Name": "GF_DATABASE_HOST",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "AuroraGrafanaDBSecretBB1C63CF",
                      },
                      ":host::",
                    ],
                  ],
                },
              },
              {
                "Name": "GF_DATABASE_NAME",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "AuroraGrafanaDBSecretBB1C63CF",
                      },
                      ":dbname::",
                    ],
                  ],
                },
              },
              {
                "Name": "GF_DATABASE_USER",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "AuroraGrafanaDBSecretBB1C63CF",
                      },
                      ":username::",
                    ],
                  ],
                },
              },
              {
                "Name": "GF_DATABASE_PASSWORD",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "AuroraGrafanaDBSecretBB1C63CF",
                      },
                      ":password::",
                    ],
                  ],
                },
              },
            ],
          },
        ],
        "Cpu": "1024",
        "ExecutionRoleArn": {
          "Fn::GetAtt": [
            "GrafanaServiceTaskDefinitionExecutionRole9DBC2006",
            "Arn",
          ],
        },
        "Family": "TargetGrafanaServiceTaskDefinitionFF715A5C",
        "Memory": "2048",
        "NetworkMode": "awsvpc",
        "RequiresCompatibilities": [
          "FARGATE",
        ],
        "RuntimePlatform": {
          "CpuArchitecture": "ARM64",
        },
        "TaskRoleArn": {
          "Fn::GetAtt": [
            "GrafanaServiceTaskDefinitionTaskRole58D661CD",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ECS::TaskDefinition",
    },
    "GrafanaServiceTaskDefinitionExecutionRole9DBC2006": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "GrafanaServiceTaskDefinitionExecutionRoleDefaultPolicy16DC53A6": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "GrafanaServiceTaskDefinitionGrafanaLogGroupD795AF6C",
                  "Arn",
                ],
              },
            },
            {
              "Action": [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": {
                "Ref": "GrafanaServicegrafanaAdminPassword93E3CFB8",
              },
            },
            {
              "Action": [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": {
                "Ref": "AuroraGrafanaDBSecretBB1C63CF",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "GrafanaServiceTaskDefinitionExecutionRoleDefaultPolicy16DC53A6",
        "Roles": [
          {
            "Ref": "GrafanaServiceTaskDefinitionExecutionRole9DBC2006",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "GrafanaServiceTaskDefinitionGrafanaLogGroupD795AF6C": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "RetentionInDays": 90,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "GrafanaServiceTaskDefinitionTaskRole58D661CD": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "GrafanaServicegrafanaAdminPassword93E3CFB8": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "GenerateSecretString": {},
      },
      "Type": "AWS::SecretsManager::Secret",
      "UpdateReplacePolicy": "Delete",
    },
    "IotDataIngesterFargateService5C97F8EF": {
      "DependsOn": [
        "IotDataIngesterTaskDefinitionTaskRoleD2C0D170",
      ],
      "Properties": {
        "Cluster": {
          "Ref": "FargateCluster76631EA2",
        },
        "DeploymentConfiguration": {
          "Alarms": {
            "AlarmNames": [],
            "Enable": false,
            "Rollback": false,
          },
          "DeploymentCircuitBreaker": {
            "Enable": true,
            "Rollback": false,
          },
          "MaximumPercent": 200,
          "MinimumHealthyPercent": 50,
        },
        "DeploymentController": {
          "Type": "ECS",
        },
        "DesiredCount": 1,
        "EnableECSManagedTags": false,
        "LaunchType": "FARGATE",
        "NetworkConfiguration": {
          "AwsvpcConfiguration": {
            "AssignPublicIp": "DISABLED",
            "SecurityGroups": [
              {
                "Fn::GetAtt": [
                  "IotDataIngesterFargateServiceSecurityGroup0B611246",
                  "GroupId",
                ],
              },
            ],
            "Subnets": [
              {
                "Ref": "VpcPrivateSubnet1Subnet67A4DBCB",
              },
              {
                "Ref": "VpcPrivateSubnet2SubnetC8EB537D",
              },
            ],
          },
        },
        "TaskDefinition": {
          "Ref": "IotDataIngesterTaskDefinition2888B13A",
        },
      },
      "Type": "AWS::ECS::Service",
    },
    "IotDataIngesterFargateServiceSecurityGroup0B611246": {
      "DependsOn": [
        "IotDataIngesterTaskDefinitionTaskRoleD2C0D170",
      ],
      "Properties": {
        "GroupDescription": "Target/IotDataIngester/FargateService/SecurityGroup",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "VpcId": {
          "Ref": "VpcC3027511",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "IotDataIngesterTaskDefinition2888B13A": {
      "Properties": {
        "ContainerDefinitions": [
          {
            "DependsOn": [
              {
                "Condition": "COMPLETE",
                "ContainerName": "DBMigration",
              },
            ],
            "Essential": true,
            "Image": {
              "Fn::Sub": "\${AWS::AccountId}.dkr.ecr.\${AWS::Region}.\${AWS::URLSuffix}/cdk-hnb659fds-container-assets-\${AWS::AccountId}-\${AWS::Region}:b59516b9c880c4663b53d0eb983451655f504fcc4997a522a93172bbaea91fca",
            },
            "LogConfiguration": {
              "LogDriver": "awslogs",
              "Options": {
                "awslogs-group": {
                  "Ref": "IotDataIngesterTaskDefinitionIotDataIngesterLogGroup3760644C",
                },
                "awslogs-region": {
                  "Ref": "AWS::Region",
                },
                "awslogs-stream-prefix": "IotDataIngester",
              },
            },
            "Name": "IotDataIngester",
            "ReadonlyRootFilesystem": false,
            "Secrets": [
              {
                "Name": "DB_HOST",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "AuroraSecretAttachment3E825A9F",
                      },
                      ":host::",
                    ],
                  ],
                },
              },
              {
                "Name": "DB_DBNAME",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "AuroraSecretAttachment3E825A9F",
                      },
                      ":dbname::",
                    ],
                  ],
                },
              },
              {
                "Name": "DB_USERNAME",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "AuroraSecretAttachment3E825A9F",
                      },
                      ":username::",
                    ],
                  ],
                },
              },
              {
                "Name": "DB_PASSWORD",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "AuroraSecretAttachment3E825A9F",
                      },
                      ":password::",
                    ],
                  ],
                },
              },
            ],
          },
          {
            "Command": [
              "pnpm",
              "prisma",
              "migrate",
              "deploy",
            ],
            "Essential": false,
            "Image": {
              "Fn::Sub": "\${AWS::AccountId}.dkr.ecr.\${AWS::Region}.\${AWS::URLSuffix}/cdk-hnb659fds-container-assets-\${AWS::AccountId}-\${AWS::Region}:2b1637ab09df932954e5da41b600c5e2d13927a0d2a0cb0325fd2efa66eaf364",
            },
            "LogConfiguration": {
              "LogDriver": "awslogs",
              "Options": {
                "awslogs-group": {
                  "Ref": "IotDataIngesterTaskDefinitionDBMigrationLogGroup86D1C49B",
                },
                "awslogs-region": {
                  "Ref": "AWS::Region",
                },
                "awslogs-stream-prefix": "DBMigration",
              },
            },
            "Name": "DBMigration",
            "ReadonlyRootFilesystem": true,
            "Secrets": [
              {
                "Name": "DB_HOST",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "AuroraSecretAttachment3E825A9F",
                      },
                      ":host::",
                    ],
                  ],
                },
              },
              {
                "Name": "DB_DBNAME",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "AuroraSecretAttachment3E825A9F",
                      },
                      ":dbname::",
                    ],
                  ],
                },
              },
              {
                "Name": "DB_USERNAME",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "AuroraSecretAttachment3E825A9F",
                      },
                      ":username::",
                    ],
                  ],
                },
              },
              {
                "Name": "DB_PASSWORD",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "AuroraSecretAttachment3E825A9F",
                      },
                      ":password::",
                    ],
                  ],
                },
              },
            ],
          },
        ],
        "Cpu": "256",
        "ExecutionRoleArn": {
          "Fn::GetAtt": [
            "IotDataIngesterTaskDefinitionExecutionRoleA621855D",
            "Arn",
          ],
        },
        "Family": "TargetIotDataIngesterTaskDefinition93E59E46",
        "Memory": "512",
        "NetworkMode": "awsvpc",
        "RequiresCompatibilities": [
          "FARGATE",
        ],
        "RuntimePlatform": {
          "CpuArchitecture": "ARM64",
        },
        "TaskRoleArn": {
          "Fn::GetAtt": [
            "IotDataIngesterTaskDefinitionTaskRoleD2C0D170",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ECS::TaskDefinition",
    },
    "IotDataIngesterTaskDefinitionDBMigrationLogGroup86D1C49B": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "RetentionInDays": 90,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "IotDataIngesterTaskDefinitionExecutionRoleA621855D": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "IotDataIngesterTaskDefinitionExecutionRoleDefaultPolicy07384351": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "ecr:BatchCheckLayerAvailability",
                "ecr:GetDownloadUrlForLayer",
                "ecr:BatchGetImage",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":ecr:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":repository/",
                    {
                      "Fn::Sub": "cdk-hnb659fds-container-assets-\${AWS::AccountId}-\${AWS::Region}",
                    },
                  ],
                ],
              },
            },
            {
              "Action": "ecr:GetAuthorizationToken",
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "IotDataIngesterTaskDefinitionIotDataIngesterLogGroup3760644C",
                  "Arn",
                ],
              },
            },
            {
              "Action": [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": {
                "Ref": "AuroraSecretAttachment3E825A9F",
              },
            },
            {
              "Action": [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "IotDataIngesterTaskDefinitionDBMigrationLogGroup86D1C49B",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "IotDataIngesterTaskDefinitionExecutionRoleDefaultPolicy07384351",
        "Roles": [
          {
            "Ref": "IotDataIngesterTaskDefinitionExecutionRoleA621855D",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "IotDataIngesterTaskDefinitionIotDataIngesterLogGroup3760644C": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "RetentionInDays": 90,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "IotDataIngesterTaskDefinitionTaskRoleD2C0D170": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "MainALB27024B77": {
      "DependsOn": [
        "VpcPublicSubnet1DefaultRoute0F5C6C43",
        "VpcPublicSubnet1RouteTableAssociationBBCB7AA1",
        "VpcPublicSubnet2DefaultRouteD629179A",
        "VpcPublicSubnet2RouteTableAssociation3AFE92E6",
      ],
      "Properties": {
        "LoadBalancerAttributes": [
          {
            "Key": "deletion_protection.enabled",
            "Value": "false",
          },
        ],
        "Scheme": "internet-facing",
        "SecurityGroups": [
          {
            "Fn::GetAtt": [
              "MainALBSecurityGroup645C0E97",
              "GroupId",
            ],
          },
        ],
        "Subnets": [
          {
            "Ref": "VpcPublicSubnet1Subnet8E8DEDC0",
          },
          {
            "Ref": "VpcPublicSubnet2SubnetA811849C",
          },
        ],
        "Type": "application",
      },
      "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
    },
    "MainALBListener7261B16A": {
      "Properties": {
        "DefaultActions": [
          {
            "TargetGroupArn": {
              "Ref": "GrafanaServiceGrafanaTargetGroup3B517F8B",
            },
            "Type": "forward",
          },
        ],
        "LoadBalancerArn": {
          "Ref": "MainALB27024B77",
        },
        "Port": 80,
        "Protocol": "HTTP",
      },
      "Type": "AWS::ElasticLoadBalancingV2::Listener",
    },
    "MainALBSecurityGroup645C0E97": {
      "Properties": {
        "GroupDescription": "Automatically created Security Group for ELB TargetMainALB8AA0199A",
        "SecurityGroupIngress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow from anyone on port 80",
            "FromPort": 80,
            "IpProtocol": "tcp",
            "ToPort": 80,
          },
        ],
        "VpcId": {
          "Ref": "VpcC3027511",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "MainALBSecurityGrouptoTargetGrafanaServiceFargateServiceSecurityGroupCF5CFB493000C6EA2189": {
      "Properties": {
        "Description": "Load balancer to target",
        "DestinationSecurityGroupId": {
          "Fn::GetAtt": [
            "GrafanaServiceFargateServiceSecurityGroupB6FC9E23",
            "GroupId",
          ],
        },
        "FromPort": 3000,
        "GroupId": {
          "Fn::GetAtt": [
            "MainALBSecurityGroup645C0E97",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "ToPort": 3000,
      },
      "Type": "AWS::EC2::SecurityGroupEgress",
    },
    "MemoryDBCluster95B2D5ED": {
      "DependsOn": [
        "MemoryDBSubnetGroup5ECB6842",
      ],
      "Properties": {
        "ACLName": "open-access",
        "AutoMinorVersionUpgrade": true,
        "ClusterName": "grafana-oncall",
        "EngineVersion": "7.1",
        "NodeType": "db.t4g.small",
        "NumReplicasPerShard": 1,
        "NumShards": 1,
        "SecurityGroupIds": [
          {
            "Fn::GetAtt": [
              "MemoryDBSecurityGroup5D27B3E7",
              "GroupId",
            ],
          },
        ],
        "SubnetGroupName": "memorydb-subnet-group",
        "TLSEnabled": true,
      },
      "Type": "AWS::MemoryDB::Cluster",
    },
    "MemoryDBSecurityGroup5D27B3E7": {
      "Properties": {
        "GroupDescription": "MemoryDB Security Group",
        "GroupName": "memorydb-security-group",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "VpcId": {
          "Ref": "VpcC3027511",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "MemoryDBSecurityGroupfromTargetOncallServiceFargateServiceSecurityGroup62CBBD5563795CC9CB09": {
      "Properties": {
        "Description": "from TargetOncallServiceFargateServiceSecurityGroup62CBBD55:6379",
        "FromPort": 6379,
        "GroupId": {
          "Fn::GetAtt": [
            "MemoryDBSecurityGroup5D27B3E7",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "OncallServiceFargateServiceSecurityGroup28BCC824",
            "GroupId",
          ],
        },
        "ToPort": 6379,
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "MemoryDBSubnetGroup5ECB6842": {
      "Properties": {
        "Description": "MemoryDB Subnet Group",
        "SubnetGroupName": "memorydb-subnet-group",
        "SubnetIds": [
          {
            "Ref": "VpcPrivateSubnet1Subnet67A4DBCB",
          },
          {
            "Ref": "VpcPrivateSubnet2SubnetC8EB537D",
          },
        ],
      },
      "Type": "AWS::MemoryDB::SubnetGroup",
    },
    "OncallALBA2831EAA": {
      "DependsOn": [
        "VpcPublicSubnet1DefaultRoute0F5C6C43",
        "VpcPublicSubnet1RouteTableAssociationBBCB7AA1",
        "VpcPublicSubnet2DefaultRouteD629179A",
        "VpcPublicSubnet2RouteTableAssociation3AFE92E6",
      ],
      "Properties": {
        "LoadBalancerAttributes": [
          {
            "Key": "deletion_protection.enabled",
            "Value": "false",
          },
        ],
        "Scheme": "internet-facing",
        "SecurityGroups": [
          {
            "Fn::GetAtt": [
              "OncallALBSecurityGroupFBA3CD16",
              "GroupId",
            ],
          },
        ],
        "Subnets": [
          {
            "Ref": "VpcPublicSubnet1Subnet8E8DEDC0",
          },
          {
            "Ref": "VpcPublicSubnet2SubnetA811849C",
          },
        ],
        "Type": "application",
      },
      "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
    },
    "OncallALBListenerD55FE461": {
      "Properties": {
        "DefaultActions": [
          {
            "TargetGroupArn": {
              "Ref": "OncallServiceGrafanaTargetGroupE92422FB",
            },
            "Type": "forward",
          },
        ],
        "LoadBalancerArn": {
          "Ref": "OncallALBA2831EAA",
        },
        "Port": 80,
        "Protocol": "HTTP",
      },
      "Type": "AWS::ElasticLoadBalancingV2::Listener",
    },
    "OncallALBSecurityGroupFBA3CD16": {
      "Properties": {
        "GroupDescription": "Automatically created Security Group for ELB TargetOncallALB9E95D119",
        "SecurityGroupIngress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow from anyone on port 80",
            "FromPort": 80,
            "IpProtocol": "tcp",
            "ToPort": 80,
          },
        ],
        "VpcId": {
          "Ref": "VpcC3027511",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "OncallALBSecurityGrouptoTargetOncallServiceFargateServiceSecurityGroup62CBBD55808002C181BF": {
      "Properties": {
        "Description": "Load balancer to target",
        "DestinationSecurityGroupId": {
          "Fn::GetAtt": [
            "OncallServiceFargateServiceSecurityGroup28BCC824",
            "GroupId",
          ],
        },
        "FromPort": 8080,
        "GroupId": {
          "Fn::GetAtt": [
            "OncallALBSecurityGroupFBA3CD16",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "ToPort": 8080,
      },
      "Type": "AWS::EC2::SecurityGroupEgress",
    },
    "OncallServiceFargateService5593D100": {
      "DependsOn": [
        "OncallALBListenerD55FE461",
        "OncallServiceTaskDefinitionTaskRole5F2A713A",
      ],
      "Properties": {
        "Cluster": {
          "Ref": "FargateCluster76631EA2",
        },
        "DeploymentConfiguration": {
          "Alarms": {
            "AlarmNames": [],
            "Enable": false,
            "Rollback": false,
          },
          "DeploymentCircuitBreaker": {
            "Enable": true,
            "Rollback": false,
          },
          "MaximumPercent": 200,
          "MinimumHealthyPercent": 50,
        },
        "DeploymentController": {
          "Type": "ECS",
        },
        "DesiredCount": 1,
        "EnableECSManagedTags": false,
        "HealthCheckGracePeriodSeconds": 60,
        "LaunchType": "FARGATE",
        "LoadBalancers": [
          {
            "ContainerName": "Engine",
            "ContainerPort": 8080,
            "TargetGroupArn": {
              "Ref": "OncallServiceGrafanaTargetGroupE92422FB",
            },
          },
        ],
        "NetworkConfiguration": {
          "AwsvpcConfiguration": {
            "AssignPublicIp": "DISABLED",
            "SecurityGroups": [
              {
                "Fn::GetAtt": [
                  "OncallServiceFargateServiceSecurityGroup28BCC824",
                  "GroupId",
                ],
              },
            ],
            "Subnets": [
              {
                "Ref": "VpcPrivateSubnet1Subnet67A4DBCB",
              },
              {
                "Ref": "VpcPrivateSubnet2SubnetC8EB537D",
              },
            ],
          },
        },
        "TaskDefinition": {
          "Ref": "OncallServiceTaskDefinition5FD36A09",
        },
      },
      "Type": "AWS::ECS::Service",
    },
    "OncallServiceFargateServiceSecurityGroup28BCC824": {
      "DependsOn": [
        "OncallServiceTaskDefinitionTaskRole5F2A713A",
      ],
      "Properties": {
        "GroupDescription": "Target/OncallService/FargateService/SecurityGroup",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "VpcId": {
          "Ref": "VpcC3027511",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "OncallServiceFargateServiceSecurityGroupfromTargetOncallALBSecurityGroup5EDA1FDA808053399513": {
      "DependsOn": [
        "OncallServiceTaskDefinitionTaskRole5F2A713A",
      ],
      "Properties": {
        "Description": "Load balancer to target",
        "FromPort": 8080,
        "GroupId": {
          "Fn::GetAtt": [
            "OncallServiceFargateServiceSecurityGroup28BCC824",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "OncallALBSecurityGroupFBA3CD16",
            "GroupId",
          ],
        },
        "ToPort": 8080,
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "OncallServiceGrafanaTargetGroupE92422FB": {
      "Properties": {
        "HealthCheckPath": "/health/",
        "Matcher": {
          "HttpCode": "200",
        },
        "Port": 8080,
        "Protocol": "HTTP",
        "TargetGroupAttributes": [
          {
            "Key": "stickiness.enabled",
            "Value": "false",
          },
        ],
        "TargetType": "ip",
        "VpcId": {
          "Ref": "VpcC3027511",
        },
      },
      "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
    },
    "OncallServiceMirageCipherIv620F5247": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "GenerateSecretString": {
          "PasswordLength": 16,
        },
      },
      "Type": "AWS::SecretsManager::Secret",
      "UpdateReplacePolicy": "Delete",
    },
    "OncallServiceMirageSecretKeyAD3C2ECB": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "GenerateSecretString": {},
      },
      "Type": "AWS::SecretsManager::Secret",
      "UpdateReplacePolicy": "Delete",
    },
    "OncallServiceSecretKey09ED8344": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "GenerateSecretString": {},
      },
      "Type": "AWS::SecretsManager::Secret",
      "UpdateReplacePolicy": "Delete",
    },
    "OncallServiceTaskDefinition5FD36A09": {
      "Properties": {
        "ContainerDefinitions": [
          {
            "Command": [
              "uwsgi",
              "--ini",
              "uwsgi.ini",
            ],
            "DependsOn": [
              {
                "Condition": "SUCCESS",
                "ContainerName": "DBMigration",
              },
            ],
            "Environment": [
              {
                "Name": "DATABASE_TYPE",
                "Value": "mysql",
              },
              {
                "Name": "BROKER_TYPE",
                "Value": "redis",
              },
              {
                "Name": "BASE_URL",
                "Value": {
                  "Fn::Join": [
                    "",
                    [
                      "http://",
                      {
                        "Fn::GetAtt": [
                          "OncallALBA2831EAA",
                          "DNSName",
                        ],
                      },
                    ],
                  ],
                },
              },
              {
                "Name": "REDIS_URI",
                "Value": {
                  "Fn::Join": [
                    "",
                    [
                      "redis://",
                      {
                        "Fn::GetAtt": [
                          "MemoryDBCluster95B2D5ED",
                          "ClusterEndpoint.Address",
                        ],
                      },
                      ":6379",
                    ],
                  ],
                },
              },
              {
                "Name": "DJANGO_SETTINGS_MODULE",
                "Value": "settings.helm",
              },
              {
                "Name": "CELERY_WORKER_QUEUE",
                "Value": "default,critical,long,slack,telegram,webhook,retry,celery,grafana",
              },
              {
                "Name": "CELERY_WORKER_CONCURRENCY",
                "Value": "1",
              },
              {
                "Name": "CELERY_WORKER_MAX_TASKS_PER_CHILD",
                "Value": "100",
              },
              {
                "Name": "CELERY_WORKER_SHUTDOWN_INTERVAL",
                "Value": "65m",
              },
              {
                "Name": "CELERY_WORKER_BEAT_ENABLED",
                "Value": "True",
              },
              {
                "Name": "GRAFANA_API_URL",
                "Value": {
                  "Fn::Join": [
                    "",
                    [
                      "http://",
                      {
                        "Fn::GetAtt": [
                          "MainALB27024B77",
                          "DNSName",
                        ],
                      },
                      "/grafana",
                    ],
                  ],
                },
              },
              {
                "Name": "MYSQL_PORT",
                "Value": "3306",
              },
            ],
            "Essential": true,
            "Image": "grafana/oncall:v1.9.20",
            "LogConfiguration": {
              "LogDriver": "awslogs",
              "Options": {
                "awslogs-group": {
                  "Ref": "OncallServiceTaskDefinitionEngineLogGroup58254137",
                },
                "awslogs-region": {
                  "Ref": "AWS::Region",
                },
                "awslogs-stream-prefix": "Engine",
              },
            },
            "Name": "Engine",
            "PortMappings": [
              {
                "ContainerPort": 8080,
                "Protocol": "tcp",
              },
            ],
            "ReadonlyRootFilesystem": false,
            "Secrets": [
              {
                "Name": "SECRET_KEY",
                "ValueFrom": {
                  "Ref": "OncallServiceSecretKey09ED8344",
                },
              },
              {
                "Name": "MIRAGE_SECRET_KEY",
                "ValueFrom": {
                  "Ref": "OncallServiceMirageSecretKeyAD3C2ECB",
                },
              },
              {
                "Name": "MIRAGE_CIPHER_IV",
                "ValueFrom": {
                  "Ref": "OncallServiceMirageCipherIv620F5247",
                },
              },
              {
                "Name": "MYSQL_HOST",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "AuroraOncallDBSecret6B152582",
                      },
                      ":host::",
                    ],
                  ],
                },
              },
              {
                "Name": "MYSQL_DB_NAME",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "AuroraOncallDBSecret6B152582",
                      },
                      ":dbname::",
                    ],
                  ],
                },
              },
              {
                "Name": "MYSQL_USER",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "AuroraOncallDBSecret6B152582",
                      },
                      ":username::",
                    ],
                  ],
                },
              },
              {
                "Name": "MYSQL_PASSWORD",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "AuroraOncallDBSecret6B152582",
                      },
                      ":password::",
                    ],
                  ],
                },
              },
            ],
          },
          {
            "Command": [
              "sh",
              "-c",
              ""./celery_with_exporter.sh"",
            ],
            "DependsOn": [
              {
                "Condition": "SUCCESS",
                "ContainerName": "DBMigration",
              },
            ],
            "Environment": [
              {
                "Name": "DATABASE_TYPE",
                "Value": "mysql",
              },
              {
                "Name": "BROKER_TYPE",
                "Value": "redis",
              },
              {
                "Name": "BASE_URL",
                "Value": {
                  "Fn::Join": [
                    "",
                    [
                      "http://",
                      {
                        "Fn::GetAtt": [
                          "OncallALBA2831EAA",
                          "DNSName",
                        ],
                      },
                    ],
                  ],
                },
              },
              {
                "Name": "REDIS_URI",
                "Value": {
                  "Fn::Join": [
                    "",
                    [
                      "redis://",
                      {
                        "Fn::GetAtt": [
                          "MemoryDBCluster95B2D5ED",
                          "ClusterEndpoint.Address",
                        ],
                      },
                      ":6379",
                    ],
                  ],
                },
              },
              {
                "Name": "DJANGO_SETTINGS_MODULE",
                "Value": "settings.helm",
              },
              {
                "Name": "CELERY_WORKER_QUEUE",
                "Value": "default,critical,long,slack,telegram,webhook,retry,celery,grafana",
              },
              {
                "Name": "CELERY_WORKER_CONCURRENCY",
                "Value": "1",
              },
              {
                "Name": "CELERY_WORKER_MAX_TASKS_PER_CHILD",
                "Value": "100",
              },
              {
                "Name": "CELERY_WORKER_SHUTDOWN_INTERVAL",
                "Value": "65m",
              },
              {
                "Name": "CELERY_WORKER_BEAT_ENABLED",
                "Value": "True",
              },
              {
                "Name": "GRAFANA_API_URL",
                "Value": {
                  "Fn::Join": [
                    "",
                    [
                      "http://",
                      {
                        "Fn::GetAtt": [
                          "MainALB27024B77",
                          "DNSName",
                        ],
                      },
                      "/grafana",
                    ],
                  ],
                },
              },
              {
                "Name": "MYSQL_PORT",
                "Value": "3306",
              },
            ],
            "Essential": true,
            "Image": "grafana/oncall:v1.9.20",
            "LogConfiguration": {
              "LogDriver": "awslogs",
              "Options": {
                "awslogs-group": {
                  "Ref": "OncallServiceTaskDefinitionCeleryLogGroup95B52C3A",
                },
                "awslogs-region": {
                  "Ref": "AWS::Region",
                },
                "awslogs-stream-prefix": "Celery",
              },
            },
            "Name": "Celery",
            "ReadonlyRootFilesystem": false,
            "Secrets": [
              {
                "Name": "SECRET_KEY",
                "ValueFrom": {
                  "Ref": "OncallServiceSecretKey09ED8344",
                },
              },
              {
                "Name": "MIRAGE_SECRET_KEY",
                "ValueFrom": {
                  "Ref": "OncallServiceMirageSecretKeyAD3C2ECB",
                },
              },
              {
                "Name": "MIRAGE_CIPHER_IV",
                "ValueFrom": {
                  "Ref": "OncallServiceMirageCipherIv620F5247",
                },
              },
              {
                "Name": "MYSQL_HOST",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "AuroraOncallDBSecret6B152582",
                      },
                      ":host::",
                    ],
                  ],
                },
              },
              {
                "Name": "MYSQL_DB_NAME",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "AuroraOncallDBSecret6B152582",
                      },
                      ":dbname::",
                    ],
                  ],
                },
              },
              {
                "Name": "MYSQL_USER",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "AuroraOncallDBSecret6B152582",
                      },
                      ":username::",
                    ],
                  ],
                },
              },
              {
                "Name": "MYSQL_PASSWORD",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "AuroraOncallDBSecret6B152582",
                      },
                      ":password::",
                    ],
                  ],
                },
              },
            ],
          },
          {
            "Command": [
              "python",
              "manage.py",
              "migrate",
              "--noinput",
            ],
            "Environment": [
              {
                "Name": "DATABASE_TYPE",
                "Value": "mysql",
              },
              {
                "Name": "BROKER_TYPE",
                "Value": "redis",
              },
              {
                "Name": "BASE_URL",
                "Value": {
                  "Fn::Join": [
                    "",
                    [
                      "http://",
                      {
                        "Fn::GetAtt": [
                          "OncallALBA2831EAA",
                          "DNSName",
                        ],
                      },
                    ],
                  ],
                },
              },
              {
                "Name": "REDIS_URI",
                "Value": {
                  "Fn::Join": [
                    "",
                    [
                      "redis://",
                      {
                        "Fn::GetAtt": [
                          "MemoryDBCluster95B2D5ED",
                          "ClusterEndpoint.Address",
                        ],
                      },
                      ":6379",
                    ],
                  ],
                },
              },
              {
                "Name": "DJANGO_SETTINGS_MODULE",
                "Value": "settings.helm",
              },
              {
                "Name": "CELERY_WORKER_QUEUE",
                "Value": "default,critical,long,slack,telegram,webhook,retry,celery,grafana",
              },
              {
                "Name": "CELERY_WORKER_CONCURRENCY",
                "Value": "1",
              },
              {
                "Name": "CELERY_WORKER_MAX_TASKS_PER_CHILD",
                "Value": "100",
              },
              {
                "Name": "CELERY_WORKER_SHUTDOWN_INTERVAL",
                "Value": "65m",
              },
              {
                "Name": "CELERY_WORKER_BEAT_ENABLED",
                "Value": "True",
              },
              {
                "Name": "GRAFANA_API_URL",
                "Value": {
                  "Fn::Join": [
                    "",
                    [
                      "http://",
                      {
                        "Fn::GetAtt": [
                          "MainALB27024B77",
                          "DNSName",
                        ],
                      },
                      "/grafana",
                    ],
                  ],
                },
              },
              {
                "Name": "MYSQL_PORT",
                "Value": "3306",
              },
            ],
            "Essential": false,
            "Image": "grafana/oncall:v1.9.20",
            "LogConfiguration": {
              "LogDriver": "awslogs",
              "Options": {
                "awslogs-group": {
                  "Ref": "OncallServiceTaskDefinitionDBMigrationLogGroup03A7AB58",
                },
                "awslogs-region": {
                  "Ref": "AWS::Region",
                },
                "awslogs-stream-prefix": "DBMigration",
              },
            },
            "Name": "DBMigration",
            "ReadonlyRootFilesystem": true,
            "Secrets": [
              {
                "Name": "SECRET_KEY",
                "ValueFrom": {
                  "Ref": "OncallServiceSecretKey09ED8344",
                },
              },
              {
                "Name": "MIRAGE_SECRET_KEY",
                "ValueFrom": {
                  "Ref": "OncallServiceMirageSecretKeyAD3C2ECB",
                },
              },
              {
                "Name": "MIRAGE_CIPHER_IV",
                "ValueFrom": {
                  "Ref": "OncallServiceMirageCipherIv620F5247",
                },
              },
              {
                "Name": "MYSQL_HOST",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "AuroraOncallDBSecret6B152582",
                      },
                      ":host::",
                    ],
                  ],
                },
              },
              {
                "Name": "MYSQL_DB_NAME",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "AuroraOncallDBSecret6B152582",
                      },
                      ":dbname::",
                    ],
                  ],
                },
              },
              {
                "Name": "MYSQL_USER",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "AuroraOncallDBSecret6B152582",
                      },
                      ":username::",
                    ],
                  ],
                },
              },
              {
                "Name": "MYSQL_PASSWORD",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "AuroraOncallDBSecret6B152582",
                      },
                      ":password::",
                    ],
                  ],
                },
              },
            ],
          },
        ],
        "Cpu": "1024",
        "ExecutionRoleArn": {
          "Fn::GetAtt": [
            "OncallServiceTaskDefinitionExecutionRoleA03B48C1",
            "Arn",
          ],
        },
        "Family": "TargetOncallServiceTaskDefinition97537256",
        "Memory": "2048",
        "NetworkMode": "awsvpc",
        "RequiresCompatibilities": [
          "FARGATE",
        ],
        "RuntimePlatform": {
          "CpuArchitecture": "ARM64",
        },
        "TaskRoleArn": {
          "Fn::GetAtt": [
            "OncallServiceTaskDefinitionTaskRole5F2A713A",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ECS::TaskDefinition",
    },
    "OncallServiceTaskDefinitionCeleryLogGroup95B52C3A": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "RetentionInDays": 90,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "OncallServiceTaskDefinitionDBMigrationLogGroup03A7AB58": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "RetentionInDays": 90,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "OncallServiceTaskDefinitionEngineLogGroup58254137": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "RetentionInDays": 90,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "OncallServiceTaskDefinitionExecutionRoleA03B48C1": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "OncallServiceTaskDefinitionExecutionRoleDefaultPolicy362302FA": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "OncallServiceTaskDefinitionEngineLogGroup58254137",
                  "Arn",
                ],
              },
            },
            {
              "Action": [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": {
                "Ref": "OncallServiceSecretKey09ED8344",
              },
            },
            {
              "Action": [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": {
                "Ref": "OncallServiceMirageSecretKeyAD3C2ECB",
              },
            },
            {
              "Action": [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": {
                "Ref": "OncallServiceMirageCipherIv620F5247",
              },
            },
            {
              "Action": [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": {
                "Ref": "AuroraOncallDBSecret6B152582",
              },
            },
            {
              "Action": [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "OncallServiceTaskDefinitionCeleryLogGroup95B52C3A",
                  "Arn",
                ],
              },
            },
            {
              "Action": [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "OncallServiceTaskDefinitionDBMigrationLogGroup03A7AB58",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "OncallServiceTaskDefinitionExecutionRoleDefaultPolicy362302FA",
        "Roles": [
          {
            "Ref": "OncallServiceTaskDefinitionExecutionRoleA03B48C1",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "OncallServiceTaskDefinitionTaskRole5F2A713A": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "TargetAuroraSecret2DEF1BBF3fdaad7efa858a3daf9490cf0a702aeb": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "Description": {
          "Fn::Join": [
            "",
            [
              "Generated by the CDK for stack: ",
              {
                "Ref": "AWS::StackName",
              },
            ],
          ],
        },
        "GenerateSecretString": {
          "ExcludeCharacters": " %+~\`#$&*()|[]{}:;<>?!'/@"\\",
          "GenerateStringKey": "password",
          "PasswordLength": 30,
          "SecretStringTemplate": "{"username":"admin"}",
        },
      },
      "Type": "AWS::SecretsManager::Secret",
      "UpdateReplacePolicy": "Delete",
    },
    "VpcC3027511": {
      "Properties": {
        "CidrBlock": "10.0.0.0/16",
        "EnableDnsHostnames": true,
        "EnableDnsSupport": true,
        "InstanceTenancy": "default",
        "Tags": [
          {
            "Key": "Name",
            "Value": "Target/Vpc/Vpc",
          },
        ],
      },
      "Type": "AWS::EC2::VPC",
    },
    "VpcIGW488B0FEB": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "Target/Vpc/Vpc",
          },
        ],
      },
      "Type": "AWS::EC2::InternetGateway",
    },
    "VpcIsolatedSubnet1RouteTableAssociation0FC379C3": {
      "Properties": {
        "RouteTableId": {
          "Ref": "VpcIsolatedSubnet1RouteTableF057227C",
        },
        "SubnetId": {
          "Ref": "VpcIsolatedSubnet1SubnetDC3C6AF8",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcIsolatedSubnet1RouteTableF057227C": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "Target/Vpc/Vpc/IsolatedSubnet1",
          },
        ],
        "VpcId": {
          "Ref": "VpcC3027511",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcIsolatedSubnet1SubnetDC3C6AF8": {
      "Properties": {
        "AvailabilityZone": {
          "Fn::Select": [
            0,
            {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.0.4.0/24",
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Isolated",
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Isolated",
          },
          {
            "Key": "Name",
            "Value": "Target/Vpc/Vpc/IsolatedSubnet1",
          },
        ],
        "VpcId": {
          "Ref": "VpcC3027511",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VpcIsolatedSubnet2RouteTableAssociation8E8989F5": {
      "Properties": {
        "RouteTableId": {
          "Ref": "VpcIsolatedSubnet2RouteTableBAB510EF",
        },
        "SubnetId": {
          "Ref": "VpcIsolatedSubnet2SubnetB479B99C",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcIsolatedSubnet2RouteTableBAB510EF": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "Target/Vpc/Vpc/IsolatedSubnet2",
          },
        ],
        "VpcId": {
          "Ref": "VpcC3027511",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcIsolatedSubnet2SubnetB479B99C": {
      "Properties": {
        "AvailabilityZone": {
          "Fn::Select": [
            1,
            {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.0.5.0/24",
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Isolated",
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Isolated",
          },
          {
            "Key": "Name",
            "Value": "Target/Vpc/Vpc/IsolatedSubnet2",
          },
        ],
        "VpcId": {
          "Ref": "VpcC3027511",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VpcNatSecurityGroup810E8F8C": {
      "Properties": {
        "GroupDescription": "Security Group for NAT instances",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": "Target/Vpc/Vpc",
          },
        ],
        "VpcId": {
          "Ref": "VpcC3027511",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "VpcNatSecurityGroupfromTargetAuroraBastionHostInstanceSecurityGroupC43FC128ALLTRAFFIC94591A74": {
      "Properties": {
        "Description": "from TargetAuroraBastionHostInstanceSecurityGroupC43FC128:ALL TRAFFIC",
        "GroupId": {
          "Fn::GetAtt": [
            "VpcNatSecurityGroup810E8F8C",
            "GroupId",
          ],
        },
        "IpProtocol": "-1",
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "AuroraBastionHostInstanceSecurityGroup3B0F6505",
            "GroupId",
          ],
        },
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "VpcNatSecurityGroupfromTargetGrafanaPdcAgentFargateServiceSecurityGroup44C6C3C0ALLTRAFFICB3AF1AC4": {
      "Properties": {
        "Description": "from TargetGrafanaPdcAgentFargateServiceSecurityGroup44C6C3C0:ALL TRAFFIC",
        "GroupId": {
          "Fn::GetAtt": [
            "VpcNatSecurityGroup810E8F8C",
            "GroupId",
          ],
        },
        "IpProtocol": "-1",
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "GrafanaPdcAgentFargateServiceSecurityGroupAA311E92",
            "GroupId",
          ],
        },
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "VpcNatSecurityGroupfromTargetGrafanaServiceFargateServiceSecurityGroupCF5CFB49ALLTRAFFIC7C4201D1": {
      "Properties": {
        "Description": "from TargetGrafanaServiceFargateServiceSecurityGroupCF5CFB49:ALL TRAFFIC",
        "GroupId": {
          "Fn::GetAtt": [
            "VpcNatSecurityGroup810E8F8C",
            "GroupId",
          ],
        },
        "IpProtocol": "-1",
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "GrafanaServiceFargateServiceSecurityGroupB6FC9E23",
            "GroupId",
          ],
        },
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "VpcNatSecurityGroupfromTargetIotDataIngesterFargateServiceSecurityGroup5719E9B3ALLTRAFFIC7AA386B6": {
      "Properties": {
        "Description": "from TargetIotDataIngesterFargateServiceSecurityGroup5719E9B3:ALL TRAFFIC",
        "GroupId": {
          "Fn::GetAtt": [
            "VpcNatSecurityGroup810E8F8C",
            "GroupId",
          ],
        },
        "IpProtocol": "-1",
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "IotDataIngesterFargateServiceSecurityGroup0B611246",
            "GroupId",
          ],
        },
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "VpcNatSecurityGroupfromTargetOncallServiceFargateServiceSecurityGroup62CBBD55ALLTRAFFIC729E90F0": {
      "Properties": {
        "Description": "from TargetOncallServiceFargateServiceSecurityGroup62CBBD55:ALL TRAFFIC",
        "GroupId": {
          "Fn::GetAtt": [
            "VpcNatSecurityGroup810E8F8C",
            "GroupId",
          ],
        },
        "IpProtocol": "-1",
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "OncallServiceFargateServiceSecurityGroup28BCC824",
            "GroupId",
          ],
        },
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "VpcPrivateSubnet1DefaultRouteF704DE9F": {
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "InstanceId": {
          "Ref": "VpcPublicSubnet1NatInstanceABFD54A8",
        },
        "RouteTableId": {
          "Ref": "VpcPrivateSubnet1RouteTable901BAEEE",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcPrivateSubnet1RouteTable901BAEEE": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "Target/Vpc/Vpc/PrivateSubnet1",
          },
        ],
        "VpcId": {
          "Ref": "VpcC3027511",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcPrivateSubnet1RouteTableAssociation2BC202CB": {
      "Properties": {
        "RouteTableId": {
          "Ref": "VpcPrivateSubnet1RouteTable901BAEEE",
        },
        "SubnetId": {
          "Ref": "VpcPrivateSubnet1Subnet67A4DBCB",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcPrivateSubnet1Subnet67A4DBCB": {
      "Properties": {
        "AvailabilityZone": {
          "Fn::Select": [
            0,
            {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.0.2.0/24",
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private",
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private",
          },
          {
            "Key": "Name",
            "Value": "Target/Vpc/Vpc/PrivateSubnet1",
          },
        ],
        "VpcId": {
          "Ref": "VpcC3027511",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VpcPrivateSubnet2DefaultRoute5FAC9901": {
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "InstanceId": {
          "Ref": "VpcPublicSubnet2NatInstanceB36A9521",
        },
        "RouteTableId": {
          "Ref": "VpcPrivateSubnet2RouteTable1EA00C9D",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcPrivateSubnet2RouteTable1EA00C9D": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "Target/Vpc/Vpc/PrivateSubnet2",
          },
        ],
        "VpcId": {
          "Ref": "VpcC3027511",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcPrivateSubnet2RouteTableAssociationFA51927B": {
      "Properties": {
        "RouteTableId": {
          "Ref": "VpcPrivateSubnet2RouteTable1EA00C9D",
        },
        "SubnetId": {
          "Ref": "VpcPrivateSubnet2SubnetC8EB537D",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcPrivateSubnet2SubnetC8EB537D": {
      "Properties": {
        "AvailabilityZone": {
          "Fn::Select": [
            1,
            {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.0.3.0/24",
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private",
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private",
          },
          {
            "Key": "Name",
            "Value": "Target/Vpc/Vpc/PrivateSubnet2",
          },
        ],
        "VpcId": {
          "Ref": "VpcC3027511",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VpcPublicSubnet1DefaultRoute0F5C6C43": {
      "DependsOn": [
        "VpcVPCGW42EC8516",
      ],
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "VpcIGW488B0FEB",
        },
        "RouteTableId": {
          "Ref": "VpcPublicSubnet1RouteTable431DD755",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcPublicSubnet1NatInstanceABFD54A8": {
      "DependsOn": [
        "VpcPublicSubnet1NatInstanceInstanceRoleE102367C",
      ],
      "Properties": {
        "AvailabilityZone": {
          "Fn::Select": [
            0,
            {
              "Fn::GetAZs": "",
            },
          ],
        },
        "IamInstanceProfile": {
          "Ref": "VpcPublicSubnet1NatInstanceInstanceProfile65B2A5BB",
        },
        "ImageId": {
          "Ref": "SsmParameterValueawsserviceamiamazonlinuxlatestal2023amikernel61arm64C96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "InstanceType": "t4g.nano",
        "SecurityGroupIds": [
          {
            "Fn::GetAtt": [
              "VpcNatSecurityGroup810E8F8C",
              "GroupId",
            ],
          },
        ],
        "SourceDestCheck": false,
        "SubnetId": {
          "Ref": "VpcPublicSubnet1Subnet8E8DEDC0",
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "Target/Vpc/Vpc/PublicSubnet1/NatInstance",
          },
        ],
        "UserData": {
          "Fn::Base64": "#!/bin/bash
yum install iptables-services -y
systemctl enable iptables
systemctl start iptables
echo "net.ipv4.ip_forward=1" > /etc/sysctl.d/custom-ip-forwarding.conf
sudo sysctl -p /etc/sysctl.d/custom-ip-forwarding.conf
sudo /sbin/iptables -t nat -A POSTROUTING -o $(route | awk '/^default/{print $NF}') -j MASQUERADE
sudo /sbin/iptables -F FORWARD
sudo service iptables save",
        },
      },
      "Type": "AWS::EC2::Instance",
    },
    "VpcPublicSubnet1NatInstanceInstanceProfile65B2A5BB": {
      "Properties": {
        "Roles": [
          {
            "Ref": "VpcPublicSubnet1NatInstanceInstanceRoleE102367C",
          },
        ],
      },
      "Type": "AWS::IAM::InstanceProfile",
    },
    "VpcPublicSubnet1NatInstanceInstanceRoleE102367C": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ec2.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "Target/Vpc/Vpc/PublicSubnet1/NatInstance",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "VpcPublicSubnet1RouteTable431DD755": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "Target/Vpc/Vpc/PublicSubnet1",
          },
        ],
        "VpcId": {
          "Ref": "VpcC3027511",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcPublicSubnet1RouteTableAssociationBBCB7AA1": {
      "Properties": {
        "RouteTableId": {
          "Ref": "VpcPublicSubnet1RouteTable431DD755",
        },
        "SubnetId": {
          "Ref": "VpcPublicSubnet1Subnet8E8DEDC0",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcPublicSubnet1Subnet8E8DEDC0": {
      "Properties": {
        "AvailabilityZone": {
          "Fn::Select": [
            0,
            {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.0.0.0/24",
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public",
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          {
            "Key": "Name",
            "Value": "Target/Vpc/Vpc/PublicSubnet1",
          },
        ],
        "VpcId": {
          "Ref": "VpcC3027511",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VpcPublicSubnet2DefaultRouteD629179A": {
      "DependsOn": [
        "VpcVPCGW42EC8516",
      ],
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "VpcIGW488B0FEB",
        },
        "RouteTableId": {
          "Ref": "VpcPublicSubnet2RouteTable77FB35FC",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcPublicSubnet2NatInstanceB36A9521": {
      "DependsOn": [
        "VpcPublicSubnet2NatInstanceInstanceRole65214B71",
      ],
      "Properties": {
        "AvailabilityZone": {
          "Fn::Select": [
            1,
            {
              "Fn::GetAZs": "",
            },
          ],
        },
        "IamInstanceProfile": {
          "Ref": "VpcPublicSubnet2NatInstanceInstanceProfileA3FF110C",
        },
        "ImageId": {
          "Ref": "SsmParameterValueawsserviceamiamazonlinuxlatestal2023amikernel61arm64C96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "InstanceType": "t4g.nano",
        "SecurityGroupIds": [
          {
            "Fn::GetAtt": [
              "VpcNatSecurityGroup810E8F8C",
              "GroupId",
            ],
          },
        ],
        "SourceDestCheck": false,
        "SubnetId": {
          "Ref": "VpcPublicSubnet2SubnetA811849C",
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "Target/Vpc/Vpc/PublicSubnet2/NatInstance",
          },
        ],
        "UserData": {
          "Fn::Base64": "#!/bin/bash
yum install iptables-services -y
systemctl enable iptables
systemctl start iptables
echo "net.ipv4.ip_forward=1" > /etc/sysctl.d/custom-ip-forwarding.conf
sudo sysctl -p /etc/sysctl.d/custom-ip-forwarding.conf
sudo /sbin/iptables -t nat -A POSTROUTING -o $(route | awk '/^default/{print $NF}') -j MASQUERADE
sudo /sbin/iptables -F FORWARD
sudo service iptables save",
        },
      },
      "Type": "AWS::EC2::Instance",
    },
    "VpcPublicSubnet2NatInstanceInstanceProfileA3FF110C": {
      "Properties": {
        "Roles": [
          {
            "Ref": "VpcPublicSubnet2NatInstanceInstanceRole65214B71",
          },
        ],
      },
      "Type": "AWS::IAM::InstanceProfile",
    },
    "VpcPublicSubnet2NatInstanceInstanceRole65214B71": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ec2.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "Target/Vpc/Vpc/PublicSubnet2/NatInstance",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "VpcPublicSubnet2RouteTable77FB35FC": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "Target/Vpc/Vpc/PublicSubnet2",
          },
        ],
        "VpcId": {
          "Ref": "VpcC3027511",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcPublicSubnet2RouteTableAssociation3AFE92E6": {
      "Properties": {
        "RouteTableId": {
          "Ref": "VpcPublicSubnet2RouteTable77FB35FC",
        },
        "SubnetId": {
          "Ref": "VpcPublicSubnet2SubnetA811849C",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcPublicSubnet2SubnetA811849C": {
      "Properties": {
        "AvailabilityZone": {
          "Fn::Select": [
            1,
            {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.0.1.0/24",
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public",
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          {
            "Key": "Name",
            "Value": "Target/Vpc/Vpc/PublicSubnet2",
          },
        ],
        "VpcId": {
          "Ref": "VpcC3027511",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VpcVPCGW42EC8516": {
      "Properties": {
        "InternetGatewayId": {
          "Ref": "VpcIGW488B0FEB",
        },
        "VpcId": {
          "Ref": "VpcC3027511",
        },
      },
      "Type": "AWS::EC2::VPCGatewayAttachment",
    },
    "VpcVpcS3EndpointForPrivate54C54F5D": {
      "Properties": {
        "RouteTableIds": [
          {
            "Ref": "VpcPrivateSubnet1RouteTable901BAEEE",
          },
          {
            "Ref": "VpcPrivateSubnet2RouteTable1EA00C9D",
          },
        ],
        "ServiceName": {
          "Fn::Join": [
            "",
            [
              "com.amazonaws.",
              {
                "Ref": "AWS::Region",
              },
              ".s3",
            ],
          ],
        },
        "VpcEndpointType": "Gateway",
        "VpcId": {
          "Ref": "VpcC3027511",
        },
      },
      "Type": "AWS::EC2::VPCEndpoint",
    },
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;
